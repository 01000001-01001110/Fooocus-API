{
    "openapi": "3.1.0",
    "info": {
        "title": "FastAPI",
        "version": "0.1.0"
    },
    "paths": {
        "/": {
            "get": {
                "summary": "Home",
                "operationId": "home__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/v1/generation/text-to-image": {
            "post": {
                "summary": "Text2Img Generation",
                "operationId": "text2img_generation_v1_generation_text_to_image_post",
                "parameters": [
                    {
                        "name": "accept",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Parameter to overvide 'Accept' header, 'image/png' for output bytes",
                            "title": "Accept"
                        },
                        "description": "Parameter to overvide 'Accept' header, 'image/png' for output bytes"
                    },
                    {
                        "name": "accept",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Accept"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Text2ImgRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "PNG bytes if request's 'Accept' header is 'image/png', otherwise JSON",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GeneratedImageBase64"
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/AsyncJobResponse"
                                        }
                                    ],
                                    "title": "Response Text2Img Generation V1 Generation Text To Image Post"
                                },
                                "example": [
                                    {
                                        "base64": "...very long string...",
                                        "seed": 1050625087,
                                        "finish_reason": "SUCCESS"
                                    }
                                ]
                            },
                            "application/json async": {
                                "example": {
                                    "job_id": 1,
                                    "job_type": "Text to Image"
                                }
                            },
                            "image/png": {
                                "example": "PNG bytes, what did you expect?"
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/generation/image-upscale-vary": {
            "post": {
                "summary": "Img Upscale Or Vary",
                "operationId": "img_upscale_or_vary_v1_generation_image_upscale_vary_post",
                "parameters": [
                    {
                        "name": "accept",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Parameter to overvide 'Accept' header, 'image/png' for output bytes",
                            "title": "Accept"
                        },
                        "description": "Parameter to overvide 'Accept' header, 'image/png' for output bytes"
                    },
                    {
                        "name": "accept",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Accept"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_img_upscale_or_vary_v1_generation_image_upscale_vary_post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "PNG bytes if request's 'Accept' header is 'image/png', otherwise JSON",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GeneratedImageBase64"
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/AsyncJobResponse"
                                        }
                                    ],
                                    "title": "Response Img Upscale Or Vary V1 Generation Image Upscale Vary Post"
                                },
                                "example": [
                                    {
                                        "base64": "...very long string...",
                                        "seed": 1050625087,
                                        "finish_reason": "SUCCESS"
                                    }
                                ]
                            },
                            "application/json async": {
                                "example": {
                                    "job_id": 1,
                                    "job_type": "Text to Image"
                                }
                            },
                            "image/png": {
                                "example": "PNG bytes, what did you expect?"
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/generation/image-inpait-outpaint": {
            "post": {
                "summary": "Img Inpaint Or Outpaint",
                "operationId": "img_inpaint_or_outpaint_v1_generation_image_inpait_outpaint_post",
                "parameters": [
                    {
                        "name": "accept",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Parameter to overvide 'Accept' header, 'image/png' for output bytes",
                            "title": "Accept"
                        },
                        "description": "Parameter to overvide 'Accept' header, 'image/png' for output bytes"
                    },
                    {
                        "name": "accept",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Accept"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_img_inpaint_or_outpaint_v1_generation_image_inpait_outpaint_post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "PNG bytes if request's 'Accept' header is 'image/png', otherwise JSON",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GeneratedImageBase64"
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/AsyncJobResponse"
                                        }
                                    ],
                                    "title": "Response Img Inpaint Or Outpaint V1 Generation Image Inpait Outpaint Post"
                                },
                                "example": [
                                    {
                                        "base64": "...very long string...",
                                        "seed": 1050625087,
                                        "finish_reason": "SUCCESS"
                                    }
                                ]
                            },
                            "application/json async": {
                                "example": {
                                    "job_id": 1,
                                    "job_type": "Text to Image"
                                }
                            },
                            "image/png": {
                                "example": "PNG bytes, what did you expect?"
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/generation/image-prompt": {
            "post": {
                "summary": "Img Prompt",
                "operationId": "img_prompt_v1_generation_image_prompt_post",
                "parameters": [
                    {
                        "name": "accept",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Parameter to overvide 'Accept' header, 'image/png' for output bytes",
                            "title": "Accept"
                        },
                        "description": "Parameter to overvide 'Accept' header, 'image/png' for output bytes"
                    },
                    {
                        "name": "accept",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Accept"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Body_img_prompt_v1_generation_image_prompt_post"
                                    }
                                ],
                                "title": "Body"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "PNG bytes if request's 'Accept' header is 'image/png', otherwise JSON",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GeneratedImageBase64"
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/AsyncJobResponse"
                                        }
                                    ],
                                    "title": "Response Img Prompt V1 Generation Image Prompt Post"
                                },
                                "example": [
                                    {
                                        "base64": "...very long string...",
                                        "seed": 1050625087,
                                        "finish_reason": "SUCCESS"
                                    }
                                ]
                            },
                            "application/json async": {
                                "example": {
                                    "job_id": 1,
                                    "job_type": "Text to Image"
                                }
                            },
                            "image/png": {
                                "example": "PNG bytes, what did you expect?"
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/generation/query-job": {
            "get": {
                "summary": "Query Job",
                "description": "Query async generation job",
                "operationId": "query_job_v1_generation_query_job_get",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Job Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncJobResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/generation/job-queue": {
            "get": {
                "summary": "Job Queue",
                "description": "Query job queue info",
                "operationId": "job_queue_v1_generation_job_queue_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobQueueInfo"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/engines/all-models": {
            "get": {
                "summary": "All Models",
                "description": "Get all filenames of base model and lora",
                "operationId": "all_models_v1_engines_all_models_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AllModelNamesResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/engines/refresh-models": {
            "post": {
                "summary": "Refresh Models",
                "description": "Refresh local files and get all filenames of base model and lora",
                "operationId": "refresh_models_v1_engines_refresh_models_post",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AllModelNamesResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/engines/styles": {
            "get": {
                "summary": "All Styles",
                "description": "Get all legal Fooocus styles",
                "operationId": "all_styles_v1_engines_styles_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Response All Styles V1 Engines Styles Get"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AllModelNamesResponse": {
                "properties": {
                    "model_filenames": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Model Filenames"
                    },
                    "lora_filenames": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Lora Filenames"
                    }
                },
                "type": "object",
                "required": [
                    "model_filenames",
                    "lora_filenames"
                ],
                "title": "AllModelNamesResponse"
            },
            "AspectRatio": {
                "type": "string",
                "enum": [
                    "704×1408",
                    "704×1344",
                    "768×1344",
                    "768×1280",
                    "832×1216",
                    "832×1152",
                    "896×1152",
                    "896×1088",
                    "960×1088",
                    "960×1024",
                    "1024×1024",
                    "1024×960",
                    "1088×960",
                    "1088×896",
                    "1152×896",
                    "1152×832",
                    "1216×832",
                    "1280×768",
                    "1344×768",
                    "1344×704",
                    "1408×704",
                    "1472×704",
                    "1536×640",
                    "1600×640",
                    "1664×576",
                    "1728×576"
                ],
                "title": "AspectRatio"
            },
            "AsyncJobResponse": {
                "properties": {
                    "job_id": {
                        "type": "integer",
                        "title": "Job Id"
                    },
                    "job_type": {
                        "$ref": "#/components/schemas/TaskType"
                    },
                    "job_stage": {
                        "$ref": "#/components/schemas/AsyncJobStage"
                    },
                    "job_progess": {
                        "type": "integer",
                        "title": "Job Progess"
                    },
                    "job_status": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Job Status"
                    },
                    "job_result": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/GeneratedImageBase64"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Job Result"
                    }
                },
                "type": "object",
                "required": [
                    "job_id",
                    "job_type",
                    "job_stage",
                    "job_progess",
                    "job_status",
                    "job_result"
                ],
                "title": "AsyncJobResponse"
            },
            "AsyncJobStage": {
                "type": "string",
                "enum": [
                    "WAITING",
                    "RUNNING",
                    "SUCCESS",
                    "ERROR"
                ],
                "title": "AsyncJobStage"
            },
            "Body_img_inpaint_or_outpaint_v1_generation_image_inpait_outpaint_post": {
                "properties": {
                    "input_image": {
                        "type": "string",
                        "format": "binary",
                        "title": "Input Image",
                        "description": "Init image for inpaint or outpaint"
                    },
                    "input_mask": {
                        "type": "string",
                        "format": "binary",
                        "title": "Input Mask",
                        "description": "Inpaint or outpaint mask"
                    },
                    "outpaint_selections": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Outpaint Selections",
                        "description": "Outpaint expansion selections, literal 'Left', 'Right', 'Top', 'Bottom' seperated by comma",
                        "default": []
                    },
                    "prompt": {
                        "type": "string",
                        "title": "Prompt",
                        "default": ""
                    },
                    "negative_prompt": {
                        "type": "string",
                        "title": "Negative Prompt",
                        "default": ""
                    },
                    "style_selections": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Style Selections",
                        "description": "Fooocus style selections, seperated by comma",
                        "default": [
                            "Fooocus V2",
                            "Default (Slightly Cinematic)"
                        ]
                    },
                    "performance_selection": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PerfomanceSelection"
                            }
                        ],
                        "default": "Speed"
                    },
                    "aspect_ratios_selection": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AspectRatio"
                            }
                        ],
                        "default": "1152×896"
                    },
                    "image_number": {
                        "type": "integer",
                        "maximum": 32,
                        "minimum": 1,
                        "title": "Image Number",
                        "description": "Image number",
                        "default": 1
                    },
                    "image_seed": {
                        "type": "integer",
                        "title": "Image Seed",
                        "description": "Seed to generate image, -1 for random",
                        "default": -1
                    },
                    "sharpness": {
                        "type": "number",
                        "maximum": 30,
                        "minimum": 0,
                        "title": "Sharpness",
                        "default": 2
                    },
                    "guidance_scale": {
                        "type": "number",
                        "maximum": 30,
                        "minimum": 1,
                        "title": "Guidance Scale",
                        "default": 7
                    },
                    "base_model_name": {
                        "type": "string",
                        "title": "Base Model Name",
                        "default": "sd_xl_base_1.0_0.9vae.safetensors"
                    },
                    "refiner_model_name": {
                        "type": "string",
                        "title": "Refiner Model Name",
                        "default": "sd_xl_refiner_1.0_0.9vae.safetensors"
                    },
                    "l1": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "L1",
                        "default": "sd_xl_offset_example-lora_1.0.safetensors"
                    },
                    "w1": {
                        "type": "number",
                        "maximum": 2,
                        "minimum": -2,
                        "title": "W1",
                        "default": 0.5
                    },
                    "l2": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "L2"
                    },
                    "w2": {
                        "type": "number",
                        "maximum": 2,
                        "minimum": -2,
                        "title": "W2",
                        "default": 0.5
                    },
                    "l3": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "L3"
                    },
                    "w3": {
                        "type": "number",
                        "maximum": 2,
                        "minimum": -2,
                        "title": "W3",
                        "default": 0.5
                    },
                    "l4": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "L4"
                    },
                    "w4": {
                        "type": "number",
                        "maximum": 2,
                        "minimum": -2,
                        "title": "W4",
                        "default": 0.5
                    },
                    "l5": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "L5"
                    },
                    "w5": {
                        "type": "number",
                        "maximum": 2,
                        "minimum": -2,
                        "title": "W5",
                        "default": 0.5
                    },
                    "async_process": {
                        "type": "boolean",
                        "title": "Async Process",
                        "description": "Set to true will run async and return job info for retrieve generataion result later",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "input_image"
                ],
                "title": "Body_img_inpaint_or_outpaint_v1_generation_image_inpait_outpaint_post"
            },
            "Body_img_prompt_v1_generation_image_prompt_post": {
                "properties": {
                    "cn_img1": {
                        "type": "string",
                        "format": "binary",
                        "title": "Cn Img1",
                        "description": "Input image for image prompt"
                    },
                    "cn_stop1": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 1,
                                "minimum": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cn Stop1",
                        "description": "Stop at for image prompt, None for default value"
                    },
                    "cn_weight1": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 2,
                                "minimum": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cn Weight1",
                        "description": "Weight for image prompt, None for default value"
                    },
                    "cn_type1": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ControlNetType"
                            }
                        ],
                        "description": "ControlNet type for image prompt",
                        "default": "Image Prompt"
                    },
                    "cn_img2": {
                        "type": "string",
                        "format": "binary",
                        "title": "Cn Img2",
                        "description": "Input image for image prompt"
                    },
                    "cn_stop2": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 1,
                                "minimum": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cn Stop2",
                        "description": "Stop at for image prompt, None for default value"
                    },
                    "cn_weight2": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 2,
                                "minimum": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cn Weight2",
                        "description": "Weight for image prompt, None for default value"
                    },
                    "cn_type2": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ControlNetType"
                            }
                        ],
                        "description": "ControlNet type for image prompt",
                        "default": "Image Prompt"
                    },
                    "cn_img3": {
                        "type": "string",
                        "format": "binary",
                        "title": "Cn Img3",
                        "description": "Input image for image prompt"
                    },
                    "cn_stop3": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 1,
                                "minimum": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cn Stop3",
                        "description": "Stop at for image prompt, None for default value"
                    },
                    "cn_weight3": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 2,
                                "minimum": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cn Weight3",
                        "description": "Weight for image prompt, None for default value"
                    },
                    "cn_type3": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ControlNetType"
                            }
                        ],
                        "description": "ControlNet type for image prompt",
                        "default": "Image Prompt"
                    },
                    "cn_img4": {
                        "type": "string",
                        "format": "binary",
                        "title": "Cn Img4",
                        "description": "Input image for image prompt"
                    },
                    "cn_stop4": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 1,
                                "minimum": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cn Stop4",
                        "description": "Stop at for image prompt, None for default value"
                    },
                    "cn_weight4": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 2,
                                "minimum": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cn Weight4",
                        "description": "Weight for image prompt, None for default value"
                    },
                    "cn_type4": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ControlNetType"
                            }
                        ],
                        "description": "ControlNet type for image prompt",
                        "default": "Image Prompt"
                    },
                    "prompt": {
                        "type": "string",
                        "title": "Prompt",
                        "default": ""
                    },
                    "negative_prompt": {
                        "type": "string",
                        "title": "Negative Prompt",
                        "default": ""
                    },
                    "style_selections": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Style Selections",
                        "description": "Fooocus style selections, seperated by comma",
                        "default": [
                            "Fooocus V2",
                            "Default (Slightly Cinematic)"
                        ]
                    },
                    "performance_selection": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PerfomanceSelection"
                            }
                        ],
                        "default": "Speed"
                    },
                    "aspect_ratios_selection": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AspectRatio"
                            }
                        ],
                        "default": "1152×896"
                    },
                    "image_number": {
                        "type": "integer",
                        "maximum": 32,
                        "minimum": 1,
                        "title": "Image Number",
                        "description": "Image number",
                        "default": 1
                    },
                    "image_seed": {
                        "type": "integer",
                        "title": "Image Seed",
                        "description": "Seed to generate image, -1 for random",
                        "default": -1
                    },
                    "sharpness": {
                        "type": "number",
                        "maximum": 30,
                        "minimum": 0,
                        "title": "Sharpness",
                        "default": 2
                    },
                    "guidance_scale": {
                        "type": "number",
                        "maximum": 30,
                        "minimum": 1,
                        "title": "Guidance Scale",
                        "default": 7
                    },
                    "base_model_name": {
                        "type": "string",
                        "title": "Base Model Name",
                        "default": "sd_xl_base_1.0_0.9vae.safetensors"
                    },
                    "refiner_model_name": {
                        "type": "string",
                        "title": "Refiner Model Name",
                        "default": "sd_xl_refiner_1.0_0.9vae.safetensors"
                    },
                    "l1": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "L1",
                        "default": "sd_xl_offset_example-lora_1.0.safetensors"
                    },
                    "w1": {
                        "type": "number",
                        "maximum": 2,
                        "minimum": -2,
                        "title": "W1",
                        "default": 0.5
                    },
                    "l2": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "L2"
                    },
                    "w2": {
                        "type": "number",
                        "maximum": 2,
                        "minimum": -2,
                        "title": "W2",
                        "default": 0.5
                    },
                    "l3": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "L3"
                    },
                    "w3": {
                        "type": "number",
                        "maximum": 2,
                        "minimum": -2,
                        "title": "W3",
                        "default": 0.5
                    },
                    "l4": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "L4"
                    },
                    "w4": {
                        "type": "number",
                        "maximum": 2,
                        "minimum": -2,
                        "title": "W4",
                        "default": 0.5
                    },
                    "l5": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "L5"
                    },
                    "w5": {
                        "type": "number",
                        "maximum": 2,
                        "minimum": -2,
                        "title": "W5",
                        "default": 0.5
                    },
                    "async_process": {
                        "type": "boolean",
                        "title": "Async Process",
                        "description": "Set to true will run async and return job info for retrieve generataion result later",
                        "default": false
                    }
                },
                "type": "object",
                "title": "Body_img_prompt_v1_generation_image_prompt_post"
            },
            "Body_img_upscale_or_vary_v1_generation_image_upscale_vary_post": {
                "properties": {
                    "input_image": {
                        "type": "string",
                        "format": "binary",
                        "title": "Input Image",
                        "description": "Init image for upsacale or outpaint"
                    },
                    "uov_method": {
                        "$ref": "#/components/schemas/UpscaleOrVaryMethod"
                    },
                    "prompt": {
                        "type": "string",
                        "title": "Prompt",
                        "default": ""
                    },
                    "negative_prompt": {
                        "type": "string",
                        "title": "Negative Prompt",
                        "default": ""
                    },
                    "style_selections": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Style Selections",
                        "description": "Fooocus style selections, seperated by comma",
                        "default": [
                            "Fooocus V2",
                            "Default (Slightly Cinematic)"
                        ]
                    },
                    "performance_selection": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PerfomanceSelection"
                            }
                        ],
                        "default": "Speed"
                    },
                    "aspect_ratios_selection": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AspectRatio"
                            }
                        ],
                        "default": "1152×896"
                    },
                    "image_number": {
                        "type": "integer",
                        "maximum": 32,
                        "minimum": 1,
                        "title": "Image Number",
                        "description": "Image number",
                        "default": 1
                    },
                    "image_seed": {
                        "type": "integer",
                        "title": "Image Seed",
                        "description": "Seed to generate image, -1 for random",
                        "default": -1
                    },
                    "sharpness": {
                        "type": "number",
                        "maximum": 30,
                        "minimum": 0,
                        "title": "Sharpness",
                        "default": 2
                    },
                    "guidance_scale": {
                        "type": "number",
                        "maximum": 30,
                        "minimum": 1,
                        "title": "Guidance Scale",
                        "default": 7
                    },
                    "base_model_name": {
                        "type": "string",
                        "title": "Base Model Name",
                        "default": "sd_xl_base_1.0_0.9vae.safetensors"
                    },
                    "refiner_model_name": {
                        "type": "string",
                        "title": "Refiner Model Name",
                        "default": "sd_xl_refiner_1.0_0.9vae.safetensors"
                    },
                    "l1": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "L1",
                        "default": "sd_xl_offset_example-lora_1.0.safetensors"
                    },
                    "w1": {
                        "type": "number",
                        "maximum": 2,
                        "minimum": -2,
                        "title": "W1",
                        "default": 0.5
                    },
                    "l2": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "L2"
                    },
                    "w2": {
                        "type": "number",
                        "maximum": 2,
                        "minimum": -2,
                        "title": "W2",
                        "default": 0.5
                    },
                    "l3": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "L3"
                    },
                    "w3": {
                        "type": "number",
                        "maximum": 2,
                        "minimum": -2,
                        "title": "W3",
                        "default": 0.5
                    },
                    "l4": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "L4"
                    },
                    "w4": {
                        "type": "number",
                        "maximum": 2,
                        "minimum": -2,
                        "title": "W4",
                        "default": 0.5
                    },
                    "l5": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "L5"
                    },
                    "w5": {
                        "type": "number",
                        "maximum": 2,
                        "minimum": -2,
                        "title": "W5",
                        "default": 0.5
                    },
                    "async_process": {
                        "type": "boolean",
                        "title": "Async Process",
                        "description": "Set to true will run async and return job info for retrieve generataion result later",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "input_image",
                    "uov_method"
                ],
                "title": "Body_img_upscale_or_vary_v1_generation_image_upscale_vary_post"
            },
            "ControlNetType": {
                "type": "string",
                "enum": [
                    "Image Prompt",
                    "PyraCanny",
                    "CPDS"
                ],
                "title": "ControlNetType"
            },
            "GeneratedImageBase64": {
                "properties": {
                    "base64": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Base64",
                        "description": "Image encoded in base64, or null if finishReasen is not 'SUCCESS'"
                    },
                    "seed": {
                        "type": "integer",
                        "title": "Seed",
                        "description": "The seed associated with this image"
                    },
                    "finish_reason": {
                        "$ref": "#/components/schemas/GenerationFinishReason"
                    }
                },
                "type": "object",
                "required": [
                    "base64",
                    "seed",
                    "finish_reason"
                ],
                "title": "GeneratedImageBase64"
            },
            "GenerationFinishReason": {
                "type": "string",
                "enum": [
                    "SUCCESS",
                    "QUEUE_IS_FULL",
                    "USER_CANCEL",
                    "ERROR"
                ],
                "title": "GenerationFinishReason"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "JobQueueInfo": {
                "properties": {
                    "running_size": {
                        "type": "integer",
                        "title": "Running Size",
                        "description": "The current running and waiting job count"
                    },
                    "finished_size": {
                        "type": "integer",
                        "title": "Finished Size",
                        "description": "Finished job cound (after auto clean)"
                    },
                    "last_job_id": {
                        "type": "integer",
                        "title": "Last Job Id",
                        "description": "Last submit generation job id"
                    }
                },
                "type": "object",
                "required": [
                    "running_size",
                    "finished_size",
                    "last_job_id"
                ],
                "title": "JobQueueInfo"
            },
            "Lora": {
                "properties": {
                    "model_name": {
                        "type": "string",
                        "title": "Model Name"
                    },
                    "weight": {
                        "type": "number",
                        "title": "Weight",
                        "default": 0.5,
                        "max": 2,
                        "min": -2
                    }
                },
                "type": "object",
                "required": [
                    "model_name"
                ],
                "title": "Lora"
            },
            "PerfomanceSelection": {
                "type": "string",
                "enum": [
                    "Speed",
                    "Quality"
                ],
                "title": "PerfomanceSelection"
            },
            "TaskType": {
                "type": "string",
                "enum": [
                    "Text to Image",
                    "Image Upscale or Variation",
                    "Image Inpaint or Outpaint",
                    "Image Prompt"
                ],
                "title": "TaskType"
            },
            "Text2ImgRequest": {
                "properties": {
                    "prompt": {
                        "type": "string",
                        "title": "Prompt",
                        "default": ""
                    },
                    "negative_prompt": {
                        "type": "string",
                        "title": "Negative Prompt",
                        "default": ""
                    },
                    "style_selections": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Style Selections",
                        "default": [
                            "Fooocus V2",
                            "Default (Slightly Cinematic)"
                        ]
                    },
                    "performance_selection": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PerfomanceSelection"
                            }
                        ],
                        "default": "Speed"
                    },
                    "aspect_ratios_selection": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AspectRatio"
                            }
                        ],
                        "default": "1152×896"
                    },
                    "image_number": {
                        "type": "integer",
                        "title": "Image Number",
                        "description": "Image number",
                        "default": 1,
                        "max": 32,
                        "min": 1
                    },
                    "image_seed": {
                        "type": "integer",
                        "title": "Image Seed",
                        "description": "Seed to generate image, -1 for random",
                        "default": -1
                    },
                    "sharpness": {
                        "type": "number",
                        "title": "Sharpness",
                        "default": 2,
                        "max": 30,
                        "min": 0
                    },
                    "guidance_scale": {
                        "type": "number",
                        "title": "Guidance Scale",
                        "default": 7,
                        "max": 30,
                        "min": 1
                    },
                    "base_model_name": {
                        "type": "string",
                        "title": "Base Model Name",
                        "default": "sd_xl_base_1.0_0.9vae.safetensors"
                    },
                    "refiner_model_name": {
                        "type": "string",
                        "title": "Refiner Model Name",
                        "default": "sd_xl_refiner_1.0_0.9vae.safetensors"
                    },
                    "loras": {
                        "items": {
                            "$ref": "#/components/schemas/Lora"
                        },
                        "type": "array",
                        "title": "Loras",
                        "default": [
                            {
                                "model_name": "sd_xl_offset_example-lora_1.0.safetensors",
                                "weight": 0.5
                            }
                        ]
                    },
                    "async_process": {
                        "type": "boolean",
                        "title": "Async Process",
                        "description": "Set to true will run async and return job info for retrieve generataion result later",
                        "default": false
                    }
                },
                "type": "object",
                "title": "Text2ImgRequest"
            },
            "UpscaleOrVaryMethod": {
                "type": "string",
                "enum": [
                    "Vary (Subtle)",
                    "Vary (Strong)",
                    "Upscale (1.5x)",
                    "Upscale (2x)",
                    "Upscale (Fast 2x)"
                ],
                "title": "UpscaleOrVaryMethod"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        }
    }
}